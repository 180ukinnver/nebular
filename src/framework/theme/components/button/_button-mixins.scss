/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */

@mixin nb-button() {
  appearance: none;
  text-align: center;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;

  &:hover, &:focus {
    text-decoration: none;
  }

  &.full-width {
    width: 100%;
  }

  ::ng-deep nb-icon {
    vertical-align: top;
  }
}

@mixin button-theme() {
  cursor: nb-theme(button-cursor);
  font-family: nb-theme(button-text-font-family);
  font-weight: nb-theme(button-text-font-weight);

  &:focus {
    outline: none;
    @include nb-outline(nb-theme(button-outline-width), nb-theme(button-outline-color));
  }

  &[disabled] {
    cursor: nb-theme(button-disabled-cursor);
  }

  @each $size in nb-get-sizes() {
    &.size-#{$size} {
      font-size: nb-theme(button-#{$size}-text-font-size);
      line-height: nb-theme(button-#{$size}-text-line-height);

      nb-icon {
        font-size: nb-theme(button-#{$size}-text-font-size);
        height: nb-theme(button-#{$size}-icon-size);
        margin-top: nb-theme(button-#{$size}-icon-vertical-margin);
        margin-bottom: nb-theme(button-#{$size}-icon-vertical-margin);
      }

      $icon-offset: nb-theme(button-#{$size}-icon-offset);
      &.icon-start:not(.icon-end) nb-icon {
        @include nb-ltr(margin-right, $icon-offset);
        @include nb-rtl(margin-left, $icon-offset);
      }
      &.icon-end:not(.icon-start) nb-icon {
        @include nb-ltr(margin-left, $icon-offset);
        @include nb-rtl(margin-right, $icon-offset);
      }

      @each $appearance in ('filled', 'outline', 'ghost', 'hero') {
        &.icon-start.icon-end.appearance-#{$appearance} {
          padding: nb-theme(icon-button-#{$appearance}-#{$size}-padding);
        }
      }
    }
  }

  @each $shape in nb-get-shapes() {
    &.shape-#{$shape} {
      border-radius: nb-theme(button-#{$shape}-border-radius);
    }
  }
}

@mixin appearance-ghost() {
  background-color: nb-theme(button-ghost-background-color);
  border-color: nb-theme(button-ghost-border-color);
  border-style: nb-theme(button-ghost-border-style);
  border-width: nb-theme(button-ghost-border-width);
  text-transform: nb-theme(button-ghost-text-transform);

  &:focus {
    $inset-shadow: nb-theme(button-ghost-focus-inset-shadow-length);
    @include nb-outline(nb-theme(button-outline-width), nb-theme(button-outline-color), $inset-shadow);
  }

  @each $size in nb-get-sizes() {
    &.size-#{$size} {
      padding: nb-theme(button-ghost-#{$size}-padding);
    }
  }

  @each $status in nb-get-statuses() {
    &.status-#{$status} {
      color: nb-theme(button-ghost-#{$status}-text-color);

      &:focus {
        background-color: nb-theme(button-ghost-#{$status}-focus-background-color);
        border-color: nb-theme(button-ghost-#{$status}-focus-border-color);
        color: nb-theme(button-ghost-#{$status}-focus-text-color);
      }

      &:hover {
        background-color: nb-theme(button-ghost-#{$status}-hover-background-color);
        border-color: nb-theme(button-ghost-#{$status}-hover-border-color);
        color: nb-theme(button-ghost-#{$status}-hover-text-color);
      }

      &:active {
        background-color: nb-theme(button-ghost-#{$status}-active-background-color);
        border-color: nb-theme(button-ghost-#{$status}-active-border-color);
        color: nb-theme(button-ghost-#{$status}-active-text-color);
      }

      &[disabled] {
        background-color: nb-theme(button-ghost-#{$status}-disabled-background-color);
        border-color: nb-theme(button-ghost-#{$status}-disabled-border-color);
        color: nb-theme(button-ghost-#{$status}-disabled-text-color);
      }
    }
  }
}

@mixin appearance-filled() {
  border-style: nb-theme(button-filled-border-style);
  border-width: nb-theme(button-filled-border-width);
  text-transform: nb-theme(button-filled-text-transform);

  @each $size in nb-get-sizes() {
    &.size-#{$size} {
      padding: nb-theme(button-filled-#{$size}-padding);
    }
  }

  @each $status in nb-get-statuses() {
    &.status-#{$status} {
      background-color: nb-theme(button-filled-#{$status}-background-color);
      border-color: nb-theme(button-filled-#{$status}-border-color);
      color: nb-theme(button-filled-#{$status}-text-color);

      &:focus {
        background-color: nb-theme(button-filled-#{$status}-focus-background-color);
        border-color: nb-theme(button-filled-#{$status}-focus-border-color);
      }

      &:hover {
        background-color: nb-theme(button-filled-#{$status}-hover-background-color);
        border-color: nb-theme(button-filled-#{$status}-hover-border-color);
      }

      &:active {
        background-color: nb-theme(button-filled-#{$status}-active-background-color);
        border-color: nb-theme(button-filled-#{$status}-active-border-color);
      }

      &[disabled] {
        background-color: nb-theme(button-filled-#{$status}-disabled-background-color);
        border-color: nb-theme(button-filled-#{$status}-disabled-border-color);
        color: nb-theme(button-filled-#{$status}-disabled-text-color);
      }
    }
  }
}

@mixin appearance-outline() {
  border-style: nb-theme(button-outline-border-style);
  border-width: nb-theme(button-outline-border-width);
  text-transform: nb-theme(button-outline-text-transform);

  &:focus {
    $inset-shadow: nb-theme(button-outline-focus-inset-shadow-length);
    @include nb-outline(nb-theme(button-outline-width), nb-theme(button-outline-color), $inset-shadow);
  }

  @each $size in nb-get-sizes() {
    &.size-#{$size} {
      padding: nb-theme(button-outline-#{$size}-padding);
    }
  }

  @each $status in nb-get-statuses() {
    &.status-#{$status} {
      background-color: nb-theme(button-outline-#{$status}-background-color);
      border-color: nb-theme(button-outline-#{$status}-border-color);
      color: nb-theme(button-outline-#{$status}-text-color);

      &:focus {
        background-color: nb-theme(button-outline-#{$status}-focus-background-color);
        border-color: nb-theme(button-outline-#{$status}-focus-border-color);
        color: nb-theme(button-outline-#{$status}-focus-text-color);
      }

      &:hover {
        background-color: nb-theme(button-outline-#{$status}-hover-background-color);
        border-color: nb-theme(button-outline-#{$status}-hover-border-color);
        color: nb-theme(button-outline-#{$status}-hover-text-color);
      }

      &:active {
        background-color: nb-theme(button-outline-#{$status}-active-background-color);
        border-color: nb-theme(button-outline-#{$status}-active-border-color);
        color: nb-theme(button-outline-#{$status}-active-text-color);
      }

      &[disabled] {
        background-color: nb-theme(button-outline-#{$status}-disabled-background-color);
        border-color: nb-theme(button-outline-#{$status}-disabled-border-color);
        color: nb-theme(button-outline-#{$status}-disabled-text-color);
      }
    }
  }
}
